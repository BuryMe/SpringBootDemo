server:
  address: 127.0.0.1
  port: 8080
  servlet:
    session:
      timeout: 28800
      cookie:
        max-age: 28800
    context-path: /demo
#spring:
#  profiles:dev
#  servlet:
#    context-path: /d
#    session:
#      timeout: 30
#  tomcat.uri-encoding: UTF-8
#  tomcat.max-threads: 0



spring:
  http:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
#  本项目作为RESTfulAPI,当出现http错误时直接抛出异常。不要为工程中的资源文件添加映射
  mvc:
    throw-exception-if-no-handler-found : true
  resources:
    add-mappings: false
  thymeleaf:
    cache: false
  #  datasource:
#    url: jdbc:mysql://localhost:3306/test
#    username: root
#    password: root
#    driverClassName: com.mysql.jdbc.Driver
  datasource:
    # 如果存在多个数据源，监控的时候可以通过名字来区分开来
    name: mysql
    # 连接数据库的url
    url: jdbc:mysql://127.0.0.1:3306/test?characterEncoding=utf-8
    # 连接数据库的账号
    username: root
    #  连接数据库的密码
    password: 123456
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    # 扩展插件
    # 监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall
    filters: stat
    # 最大连接池数量
    maxActive: 20
    # 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
    initialSize: 1
    # 获取连接时最大等待时间，单位毫秒
    maxWait: 60000
    # 最小连接池数量
    minIdle: 1
    timeBetweenEvictionRunsMillis: 60000
    # 连接保持空闲而不被驱逐的最长时间
    minEvictableIdleTimeMillis: 300000
    # 用来检测连接是否有效的sql，要求是一个查询语句
    # 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用
    validationQuery: select count(1) from 'table'
    # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
    testWhileIdle: true
    # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnBorrow: false
    # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnReturn: false
    # 是否缓存preparedStatement，即PSCache
    poolPreparedStatements: false
    # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true
    maxOpenPreparedStatements: -1
  redis:
#    数据库索引
    database: 0
    host: 127.0.0.1
    port: 6379
    password: 123456
    timeout: 0
    jedis:
      pool:
        #连接池最大连接数（使用负值表示没有限制）
        max-active: 100
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 1
#        连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1

  activemq:
    broker-url: # pagehelper分页插件
pagehelper:
    # 数据库的方言
    helperDialect: mysql
    # 启用合理化，如果pageNum < 1会查询第一页，如果pageNum > pages会查询最后一页
    reasonable: true
mybatis:
    # mapper.xml包地址
    mapper-locations: classpath:mapper/*.xml
    # pojo生成包地址
    type-aliases-package: com.example.domain.mybatis

logging:
#  config: logback-spring.xml
  level:
    com: debug
    root: info
    org.springframework: info
  file: ./logback.log

web:
  params:
    LOGIN_URI : login/userLogin.web
    REGISTER_URI : login/userRegister.web



